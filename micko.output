Grammar

    0 $accept: program $end

    1 program: global_list function_list

    2 global_list: %empty
    3            | global_list global_var

    4 global_var: _TYPE _ID _SEMICOLON

    5 function_list: function
    6              | function_list function

    7 $@1: %empty

    8 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    9 parameters: %empty
   10           | pars

   11 pars: _TYPE _ID
   12     | pars _COMMA _TYPE _ID

   13 $@2: %empty

   14 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   15 variable_list: %empty
   16              | variable_list variable

   17 $@3: %empty

   18 variable: _TYPE $@3 vars _SEMICOLON

   19 vars: _ID
   20     | vars _COMMA _ID

   21 statement_list: %empty
   22               | statement_list statement

   23 statement: compound_statement
   24          | inc_statement
   25          | assignment_statement
   26          | if_statement
   27          | iterate_statement
   28          | branch_statement
   29          | function_statement
   30          | return_statement

   31 compound_statement: _LBRACKET statement_list _RBRACKET

   32 function_statement: function_call _SEMICOLON

   33 inc_statement: var_inc _SEMICOLON

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   35 num_exp: m_exp
   36        | num_exp _AROP m_exp

   37 m_exp: exp
   38      | m_exp _MOP exp

   39 exp: literal
   40    | _ID
   41    | var_inc
   42    | _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp
   43    | function_call
   44    | _LPAREN num_exp _RPAREN

   45 cond_exp: _ID
   46         | literal

   47 var_inc: _ID _INC

   48 literal: _INT_NUMBER
   49        | _UINT_NUMBER

   50 $@4: %empty

   51 function_call: _ID $@4 _LPAREN arguments _RPAREN

   52 arguments: %empty
   53          | args

   54 args: num_exp
   55     | args _COMMA num_exp

   56 $@5: %empty

   57 @6: %empty

   58 $@7: %empty

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement _STEP literal $@7 _SEMICOLON

   60 $@8: %empty

   61 $@9: %empty

   62 $@10: %empty

   63 $@11: %empty

   64 $@12: %empty

   65 $@13: %empty

   66 $@14: %empty

   67 $@15: %empty

   68 $@16: %empty

   69 $@17: %empty

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

   71 if_statement: if_part
   72             | if_part _ELSE statement

   73 @18: %empty

   74 $@19: %empty

   75 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement

   76 rel_exp: num_exp _RELOP num_exp

   77 return_statement: _RETURN num_exp _SEMICOLON
   78                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 4 8 11 12 18
    _IF (259) 75
    _ELSE (260) 72
    _RETURN (261) 77 78
    _ID <s> (262) 4 8 11 12 19 20 34 40 45 47 51 59 70
    _INT_NUMBER <s> (263) 48
    _UINT_NUMBER <s> (264) 49
    _LPAREN (265) 8 42 44 51 70 75
    _RPAREN (266) 8 42 44 51 70 75
    _LBRACKET (267) 14 31
    _RBRACKET (268) 14 31
    _ASSIGN (269) 34
    _SEMICOLON (270) 4 18 32 33 34 59 70 77 78
    _AROP <i> (271) 36
    _RELOP <i> (272) 76
    _COMMA (273) 12 20 55 70
    _INC (274) 47
    _ITERATE (275) 59
    _STEP (276) 59
    _COLON (277) 42 59
    _BRANCH (278) 70
    _FIRST (279) 70
    _SECOND (280) 70
    _THIRD (281) 70
    _OTHERWISE (282) 70
    _END_BRANCH (283) 70
    _QMARK (284) 42
    _MOP <i> (285) 38
    ONLY_IF (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 1
        on right: 0
    global_list (34)
        on left: 2 3
        on right: 1 3
    global_var (35)
        on left: 4
        on right: 3
    function_list (36)
        on left: 5 6
        on right: 1 6
    function (37)
        on left: 8
        on right: 5 6
    $@1 (38)
        on left: 7
        on right: 8
    parameters (39)
        on left: 9 10
        on right: 8
    pars <i> (40)
        on left: 11 12
        on right: 10 12
    body (41)
        on left: 14
        on right: 8
    $@2 (42)
        on left: 13
        on right: 14
    variable_list (43)
        on left: 15 16
        on right: 14 16
    variable (44)
        on left: 18
        on right: 16
    $@3 (45)
        on left: 17
        on right: 18
    vars <s> (46)
        on left: 19 20
        on right: 18 20
    statement_list (47)
        on left: 21 22
        on right: 14 22 31
    statement (48)
        on left: 23 24 25 26 27 28 29 30
        on right: 22 59 70 72 75
    compound_statement (49)
        on left: 31
        on right: 23
    function_statement (50)
        on left: 32
        on right: 29
    inc_statement (51)
        on left: 33
        on right: 24
    assignment_statement (52)
        on left: 34
        on right: 25
    num_exp <i> (53)
        on left: 35 36
        on right: 34 36 44 54 55 76 77
    m_exp <i> (54)
        on left: 37 38
        on right: 35 36 38
    exp <i> (55)
        on left: 39 40 41 42 43 44
        on right: 37 38
    cond_exp <i> (56)
        on left: 45 46
        on right: 42
    var_inc <s> (57)
        on left: 47
        on right: 33 41
    literal <i> (58)
        on left: 48 49
        on right: 39 46 59 70
    function_call <i> (59)
        on left: 51
        on right: 32 43
    $@4 (60)
        on left: 50
        on right: 51
    arguments <i> (61)
        on left: 52 53
        on right: 51
    args <i> (62)
        on left: 54 55
        on right: 53 55
    iterate_statement (63)
        on left: 59
        on right: 27
    $@5 (64)
        on left: 56
        on right: 59
    @6 (65)
        on left: 57
        on right: 59
    $@7 (66)
        on left: 58
        on right: 59
    branch_statement (67)
        on left: 70
        on right: 28
    $@8 (68)
        on left: 60
        on right: 70
    $@9 (69)
        on left: 61
        on right: 70
    $@10 (70)
        on left: 62
        on right: 70
    $@11 (71)
        on left: 63
        on right: 70
    $@12 (72)
        on left: 64
        on right: 70
    $@13 (73)
        on left: 65
        on right: 70
    $@14 (74)
        on left: 66
        on right: 70
    $@15 (75)
        on left: 67
        on right: 70
    $@16 (76)
        on left: 68
        on right: 70
    $@17 (77)
        on left: 69
        on right: 70
    if_statement (78)
        on left: 71 72
        on right: 26
    if_part <i> (79)
        on left: 75
        on right: 71 72
    @18 (80)
        on left: 73
        on right: 75
    $@19 (81)
        on left: 74
        on right: 75
    rel_exp <i> (82)
        on left: 76
        on right: 42 75
    return_statement (83)
        on left: 77 78
        on right: 30


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (global_list)

    program      go to state 1
    global_list  go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: global_list . function_list
    3 global_list: global_list . global_var

    _TYPE  shift, and go to state 4

    global_var     go to state 5
    function_list  go to state 6
    function       go to state 7


State 3

    0 $accept: program $end .

    $default  accept


State 4

    4 global_var: _TYPE . _ID _SEMICOLON
    8 function: _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 8


State 5

    3 global_list: global_list global_var .

    $default  reduce using rule 3 (global_list)


State 6

    1 program: global_list function_list .
    6 function_list: function_list . function

    _TYPE  shift, and go to state 9

    $default  reduce using rule 1 (program)

    function  go to state 10


State 7

    5 function_list: function .

    $default  reduce using rule 5 (function_list)


State 8

    4 global_var: _TYPE _ID . _SEMICOLON
    8 function: _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    _SEMICOLON  shift, and go to state 11

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 9

    8 function: _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 13


State 10

    6 function_list: function_list function .

    $default  reduce using rule 6 (function_list)


State 11

    4 global_var: _TYPE _ID _SEMICOLON .

    $default  reduce using rule 4 (global_var)


State 12

    8 function: _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 14


State 13

    8 function: _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 7 ($@1)

    $@1  go to state 12


State 14

    8 function: _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 15

    $default  reduce using rule 9 (parameters)

    parameters  go to state 16
    pars        go to state 17


State 15

   11 pars: _TYPE . _ID

    _ID  shift, and go to state 18


State 16

    8 function: _TYPE _ID $@1 _LPAREN parameters . _RPAREN body

    _RPAREN  shift, and go to state 19


State 17

   10 parameters: pars .
   12 pars: pars . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 20

    $default  reduce using rule 10 (parameters)


State 18

   11 pars: _TYPE _ID .

    $default  reduce using rule 11 (pars)


State 19

    8 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 21

    body  go to state 22


State 20

   12 pars: pars _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 23


State 21

   14 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 15 (variable_list)

    variable_list  go to state 24


State 22

    8 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 8 (function)


State 23

   12 pars: pars _COMMA _TYPE . _ID

    _ID  shift, and go to state 25


State 24

   14 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   16 variable_list: variable_list . variable

    _TYPE  shift, and go to state 26

    $default  reduce using rule 13 ($@2)

    $@2       go to state 27
    variable  go to state 28


State 25

   12 pars: pars _COMMA _TYPE _ID .

    $default  reduce using rule 12 (pars)


State 26

   18 variable: _TYPE . $@3 vars _SEMICOLON

    $default  reduce using rule 17 ($@3)

    $@3  go to state 29


State 27

   14 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 30


State 28

   16 variable_list: variable_list variable .

    $default  reduce using rule 16 (variable_list)


State 29

   18 variable: _TYPE $@3 . vars _SEMICOLON

    _ID  shift, and go to state 31

    vars  go to state 32


State 30

   14 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   22 statement_list: statement_list . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 37
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 40
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 31

   19 vars: _ID .

    $default  reduce using rule 19 (vars)


State 32

   18 variable: _TYPE $@3 vars . _SEMICOLON
   20 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 52
    _COMMA      shift, and go to state 53


State 33

   75 if_part: _IF . _LPAREN @18 rel_exp $@19 _RPAREN statement

    _LPAREN  shift, and go to state 54


State 34

   77 return_statement: _RETURN . num_exp _SEMICOLON
   78                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58
    _SEMICOLON    shift, and go to state 59

    num_exp        go to state 60
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 35

   34 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   47 var_inc: _ID . _INC
   51 function_call: _ID . $@4 _LPAREN arguments _RPAREN

    _ASSIGN  shift, and go to state 66
    _INC     shift, and go to state 67

    $default  reduce using rule 50 ($@4)

    $@4  go to state 68


State 36

   31 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 21 (statement_list)

    statement_list  go to state 69


State 37

   14 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 14 (body)


State 38

   59 iterate_statement: _ITERATE . _ID $@5 literal _COLON literal @6 statement _STEP literal $@7 _SEMICOLON

    _ID  shift, and go to state 70


State 39

   70 branch_statement: _BRANCH . _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _LPAREN  shift, and go to state 71


State 40

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 41

   23 statement: compound_statement .

    $default  reduce using rule 23 (statement)


State 42

   29 statement: function_statement .

    $default  reduce using rule 29 (statement)


State 43

   24 statement: inc_statement .

    $default  reduce using rule 24 (statement)


State 44

   25 statement: assignment_statement .

    $default  reduce using rule 25 (statement)


State 45

   33 inc_statement: var_inc . _SEMICOLON

    _SEMICOLON  shift, and go to state 72


State 46

   32 function_statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 73


State 47

   27 statement: iterate_statement .

    $default  reduce using rule 27 (statement)


State 48

   28 statement: branch_statement .

    $default  reduce using rule 28 (statement)


State 49

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


State 50

   71 if_statement: if_part .
   72             | if_part . _ELSE statement

    _ELSE  shift, and go to state 74

    $default  reduce using rule 71 (if_statement)


State 51

   30 statement: return_statement .

    $default  reduce using rule 30 (statement)


State 52

   18 variable: _TYPE $@3 vars _SEMICOLON .

    $default  reduce using rule 18 (variable)


State 53

   20 vars: vars _COMMA . _ID

    _ID  shift, and go to state 75


State 54

   75 if_part: _IF _LPAREN . @18 rel_exp $@19 _RPAREN statement

    $default  reduce using rule 73 (@18)

    @18  go to state 76


State 55

   40 exp: _ID .
   47 var_inc: _ID . _INC
   51 function_call: _ID . $@4 _LPAREN arguments _RPAREN

    _INC  shift, and go to state 67

    _LPAREN   reduce using rule 50 ($@4)
    $default  reduce using rule 40 (exp)

    $@4  go to state 68


State 56

   48 literal: _INT_NUMBER .

    $default  reduce using rule 48 (literal)


State 57

   49 literal: _UINT_NUMBER .

    $default  reduce using rule 49 (literal)


State 58

   42 exp: _LPAREN . rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp
   44    | _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 77
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65
    rel_exp        go to state 78


State 59

   78 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 78 (return_statement)


State 60

   36 num_exp: num_exp . _AROP m_exp
   77 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 79
    _AROP       shift, and go to state 80


State 61

   35 num_exp: m_exp .
   38 m_exp: m_exp . _MOP exp

    _MOP  shift, and go to state 81

    $default  reduce using rule 35 (num_exp)


State 62

   37 m_exp: exp .

    $default  reduce using rule 37 (m_exp)


State 63

   41 exp: var_inc .

    $default  reduce using rule 41 (exp)


State 64

   39 exp: literal .

    $default  reduce using rule 39 (exp)


State 65

   43 exp: function_call .

    $default  reduce using rule 43 (exp)


State 66

   34 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 82
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 67

   47 var_inc: _ID _INC .

    $default  reduce using rule 47 (var_inc)


State 68

   51 function_call: _ID $@4 . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 83


State 69

   22 statement_list: statement_list . statement
   31 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _RBRACKET  shift, and go to state 84
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 40
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 70

   59 iterate_statement: _ITERATE _ID . $@5 literal _COLON literal @6 statement _STEP literal $@7 _SEMICOLON

    $default  reduce using rule 56 ($@5)

    $@5  go to state 85


State 71

   70 branch_statement: _BRANCH _LPAREN . _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _ID  shift, and go to state 86


State 72

   33 inc_statement: var_inc _SEMICOLON .

    $default  reduce using rule 33 (inc_statement)


State 73

   32 function_statement: function_call _SEMICOLON .

    $default  reduce using rule 32 (function_statement)


State 74

   72 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 87
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 75

   20 vars: vars _COMMA _ID .

    $default  reduce using rule 20 (vars)


State 76

   75 if_part: _IF _LPAREN @18 . rel_exp $@19 _RPAREN statement

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 88
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65
    rel_exp        go to state 89


State 77

   36 num_exp: num_exp . _AROP m_exp
   44 exp: _LPAREN num_exp . _RPAREN
   76 rel_exp: num_exp . _RELOP num_exp

    _RPAREN  shift, and go to state 90
    _AROP    shift, and go to state 80
    _RELOP   shift, and go to state 91


State 78

   42 exp: _LPAREN rel_exp . _RPAREN _QMARK cond_exp _COLON cond_exp

    _RPAREN  shift, and go to state 92


State 79

   77 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 77 (return_statement)


State 80

   36 num_exp: num_exp _AROP . m_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    m_exp          go to state 93
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 81

   38 m_exp: m_exp _MOP . exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    exp            go to state 94
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 82

   34 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   36 num_exp: num_exp . _AROP m_exp

    _SEMICOLON  shift, and go to state 95
    _AROP       shift, and go to state 80


State 83

   51 function_call: _ID $@4 _LPAREN . arguments _RPAREN

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    $default  reduce using rule 52 (arguments)

    num_exp        go to state 96
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65
    arguments      go to state 97
    args           go to state 98


State 84

   31 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 31 (compound_statement)


State 85

   59 iterate_statement: _ITERATE _ID $@5 . literal _COLON literal @6 statement _STEP literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 99


State 86

   70 branch_statement: _BRANCH _LPAREN _ID . $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 60 ($@8)

    $@8  go to state 100


State 87

   72 if_statement: if_part _ELSE statement .

    $default  reduce using rule 72 (if_statement)


State 88

   36 num_exp: num_exp . _AROP m_exp
   76 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 80
    _RELOP  shift, and go to state 91


State 89

   75 if_part: _IF _LPAREN @18 rel_exp . $@19 _RPAREN statement

    $default  reduce using rule 74 ($@19)

    $@19  go to state 101


State 90

   44 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 44 (exp)


State 91

   76 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 102
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 92

   42 exp: _LPAREN rel_exp _RPAREN . _QMARK cond_exp _COLON cond_exp

    _QMARK  shift, and go to state 103


State 93

   36 num_exp: num_exp _AROP m_exp .
   38 m_exp: m_exp . _MOP exp

    _MOP  shift, and go to state 81

    $default  reduce using rule 36 (num_exp)


State 94

   38 m_exp: m_exp _MOP exp .

    $default  reduce using rule 38 (m_exp)


State 95

   34 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 34 (assignment_statement)


State 96

   36 num_exp: num_exp . _AROP m_exp
   54 args: num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 54 (args)


State 97

   51 function_call: _ID $@4 _LPAREN arguments . _RPAREN

    _RPAREN  shift, and go to state 104


State 98

   53 arguments: args .
   55 args: args . _COMMA num_exp

    _COMMA  shift, and go to state 105

    $default  reduce using rule 53 (arguments)


State 99

   59 iterate_statement: _ITERATE _ID $@5 literal . _COLON literal @6 statement _STEP literal $@7 _SEMICOLON

    _COLON  shift, and go to state 106


State 100

   70 branch_statement: _BRANCH _LPAREN _ID $@8 . _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _SEMICOLON  shift, and go to state 107


State 101

   75 if_part: _IF _LPAREN @18 rel_exp $@19 . _RPAREN statement

    _RPAREN  shift, and go to state 108


State 102

   36 num_exp: num_exp . _AROP m_exp
   76 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 76 (rel_exp)


State 103

   42 exp: _LPAREN rel_exp _RPAREN _QMARK . cond_exp _COLON cond_exp

    _ID           shift, and go to state 109
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    cond_exp  go to state 110
    literal   go to state 111


State 104

   51 function_call: _ID $@4 _LPAREN arguments _RPAREN .

    $default  reduce using rule 51 (function_call)


State 105

   55 args: args _COMMA . num_exp

    _ID           shift, and go to state 55
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57
    _LPAREN       shift, and go to state 58

    num_exp        go to state 112
    m_exp          go to state 61
    exp            go to state 62
    var_inc        go to state 63
    literal        go to state 64
    function_call  go to state 65


State 106

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON . literal @6 statement _STEP literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 113


State 107

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON . literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 114


State 108

   75 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN . statement

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 115
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 109

   45 cond_exp: _ID .

    $default  reduce using rule 45 (cond_exp)


State 110

   42 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp . _COLON cond_exp

    _COLON  shift, and go to state 116


State 111

   46 cond_exp: literal .

    $default  reduce using rule 46 (cond_exp)


State 112

   36 num_exp: num_exp . _AROP m_exp
   55 args: args _COMMA num_exp .

    _AROP  shift, and go to state 80

    $default  reduce using rule 55 (args)


State 113

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal . @6 statement _STEP literal $@7 _SEMICOLON

    $default  reduce using rule 57 (@6)

    @6  go to state 117


State 114

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal . _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _COMMA  shift, and go to state 118


State 115

   75 if_part: _IF _LPAREN @18 rel_exp $@19 _RPAREN statement .

    $default  reduce using rule 75 (if_part)


State 116

   42 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON . cond_exp

    _ID           shift, and go to state 109
    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    cond_exp  go to state 119
    literal   go to state 111


State 117

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 . statement _STEP literal $@7 _SEMICOLON

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 120
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 118

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA . literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 121


State 119

   42 exp: _LPAREN rel_exp _RPAREN _QMARK cond_exp _COLON cond_exp .

    $default  reduce using rule 42 (exp)


State 120

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement . _STEP literal $@7 _SEMICOLON

    _STEP  shift, and go to state 122


State 121

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal . _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _COMMA  shift, and go to state 123


State 122

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement _STEP . literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 124


State 123

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA . literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _INT_NUMBER   shift, and go to state 56
    _UINT_NUMBER  shift, and go to state 57

    literal  go to state 125


State 124

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement _STEP literal . $@7 _SEMICOLON

    $default  reduce using rule 58 ($@7)

    $@7  go to state 126


State 125

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal . _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _RPAREN  shift, and go to state 127


State 126

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement _STEP literal $@7 . _SEMICOLON

    _SEMICOLON  shift, and go to state 128


State 127

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN . $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 61 ($@9)

    $@9  go to state 129


State 128

   59 iterate_statement: _ITERATE _ID $@5 literal _COLON literal @6 statement _STEP literal $@7 _SEMICOLON .

    $default  reduce using rule 59 (iterate_statement)


State 129

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 . _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _FIRST  shift, and go to state 130


State 130

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST . $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 62 ($@10)

    $@10  go to state 131


State 131

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 . statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 132
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 132

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement . $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 63 ($@11)

    $@11  go to state 133


State 133

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 . _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _SECOND  shift, and go to state 134


State 134

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND . $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 64 ($@12)

    $@12  go to state 135


State 135

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 . statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 136
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 136

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement . $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 65 ($@13)

    $@13  go to state 137


State 137

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 . _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _THIRD  shift, and go to state 138


State 138

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD . $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 66 ($@14)

    $@14  go to state 139


State 139

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 . statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 140
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 140

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement . $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 67 ($@15)

    $@15  go to state 141


State 141

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 . _OTHERWISE $@16 statement $@17 _END_BRANCH

    _OTHERWISE  shift, and go to state 142


State 142

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE . $@16 statement $@17 _END_BRANCH

    $default  reduce using rule 68 ($@16)

    $@16  go to state 143


State 143

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 . statement $@17 _END_BRANCH

    _IF        shift, and go to state 33
    _RETURN    shift, and go to state 34
    _ID        shift, and go to state 35
    _LBRACKET  shift, and go to state 36
    _ITERATE   shift, and go to state 38
    _BRANCH    shift, and go to state 39

    statement             go to state 144
    compound_statement    go to state 41
    function_statement    go to state 42
    inc_statement         go to state 43
    assignment_statement  go to state 44
    var_inc               go to state 45
    function_call         go to state 46
    iterate_statement     go to state 47
    branch_statement      go to state 48
    if_statement          go to state 49
    if_part               go to state 50
    return_statement      go to state 51


State 144

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement . $@17 _END_BRANCH

    $default  reduce using rule 69 ($@17)

    $@17  go to state 145


State 145

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 . _END_BRANCH

    _END_BRANCH  shift, and go to state 146


State 146

   70 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST $@10 statement $@11 _SECOND $@12 statement $@13 _THIRD $@14 statement $@15 _OTHERWISE $@16 statement $@17 _END_BRANCH .

    $default  reduce using rule 70 (branch_statement)
