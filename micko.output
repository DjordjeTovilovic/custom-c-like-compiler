Grammar

    0 $accept: program $end

    1 program: function_list

    2 function_list: function
    3              | function_list function

    4 $@1: %empty

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body

    6 parameters: %empty
    7           | pars

    8 pars: _TYPE _ID
    9     | pars _COMMA _TYPE _ID

   10 $@2: %empty

   11 body: _LBRACKET variable_list $@2 statement_list _RBRACKET

   12 variable_list: %empty
   13              | variable_list variable

   14 $@3: %empty

   15 variable: _TYPE $@3 vars _SEMICOLON

   16 vars: _ID
   17     | vars _COMMA _ID

   18 statement_list: %empty
   19               | statement_list statement

   20 statement: compound_statement
   21          | inc_statement
   22          | assignment_statement
   23          | if_statement
   24          | iterate_statement
   25          | branch_statement
   26          | function_statement
   27          | return_statement

   28 compound_statement: _LBRACKET statement_list _RBRACKET

   29 function_statement: function_call _SEMICOLON

   30 inc_statement: var_inc _SEMICOLON

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON

   32 num_exp: exp
   33        | num_exp _AROP exp

   34 exp: literal
   35    | _ID
   36    | var_inc
   37    | function_call
   38    | _LPAREN num_exp _RPAREN

   39 var_inc: _ID _INC

   40 literal: _INT_NUMBER
   41        | _UINT_NUMBER

   42 $@4: %empty

   43 function_call: _ID $@4 _LPAREN arguments _RPAREN

   44 arguments: %empty
   45          | args

   46 args: num_exp
   47     | args _COMMA num_exp

   48 $@5: %empty

   49 $@6: %empty

   50 $@7: %empty

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON

   52 $@8: %empty

   53 $@9: %empty

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

   55 if_statement: if_part
   56             | if_part _ELSE statement

   57 @10: %empty

   58 $@11: %empty

   59 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement

   60 rel_exp: num_exp _RELOP num_exp

   61 return_statement: _RETURN num_exp _SEMICOLON
   62                 | _RETURN _SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    _TYPE <i> (258) 5 8 9 15
    _IF (259) 59
    _ELSE (260) 56
    _RETURN (261) 61 62
    _ID <s> (262) 5 8 9 16 17 31 35 39 43 51 54
    _INT_NUMBER <s> (263) 40
    _UINT_NUMBER <s> (264) 41
    _LPAREN (265) 5 38 43 54 59
    _RPAREN (266) 5 38 43 54 59
    _LBRACKET (267) 11 28
    _RBRACKET (268) 11 28
    _ASSIGN (269) 31
    _SEMICOLON (270) 15 29 30 31 51 54 61 62
    _AROP <i> (271) 33
    _RELOP <i> (272) 60
    _COMMA (273) 9 17 47 54
    _INC (274) 39
    _ITERATE (275) 51
    _STEP (276) 51
    _COLON (277) 51
    _BRANCH (278) 54
    _FIRST (279) 54
    _SECOND (280) 54
    _THIRD (281) 54
    _OTHERWISE (282) 54
    _END_BRANCH (283) 54
    ONLY_IF (284)


Nonterminals, with rules where they appear

    $accept (30)
        on left: 0
    program (31)
        on left: 1
        on right: 0
    function_list (32)
        on left: 2 3
        on right: 1 3
    function (33)
        on left: 5
        on right: 2 3
    $@1 (34)
        on left: 4
        on right: 5
    parameters (35)
        on left: 6 7
        on right: 5
    pars <i> (36)
        on left: 8 9
        on right: 7 9
    body (37)
        on left: 11
        on right: 5
    $@2 (38)
        on left: 10
        on right: 11
    variable_list (39)
        on left: 12 13
        on right: 11 13
    variable (40)
        on left: 15
        on right: 13
    $@3 (41)
        on left: 14
        on right: 15
    vars <s> (42)
        on left: 16 17
        on right: 15 17
    statement_list (43)
        on left: 18 19
        on right: 11 19 28
    statement (44)
        on left: 20 21 22 23 24 25 26 27
        on right: 19 51 54 56 59
    compound_statement (45)
        on left: 28
        on right: 20
    function_statement (46)
        on left: 29
        on right: 26
    inc_statement (47)
        on left: 30
        on right: 21
    assignment_statement (48)
        on left: 31
        on right: 22
    num_exp <i> (49)
        on left: 32 33
        on right: 31 33 38 46 47 60 61
    exp <i> (50)
        on left: 34 35 36 37 38
        on right: 32 33
    var_inc <s> (51)
        on left: 39
        on right: 30 36
    literal <i> (52)
        on left: 40 41
        on right: 34 51 54
    function_call <i> (53)
        on left: 43
        on right: 29 37
    $@4 (54)
        on left: 42
        on right: 43
    arguments <i> (55)
        on left: 44 45
        on right: 43
    args <i> (56)
        on left: 46 47
        on right: 45 47
    iterate_statement (57)
        on left: 51
        on right: 24
    $@5 (58)
        on left: 48
        on right: 51
    $@6 (59)
        on left: 49
        on right: 51
    $@7 (60)
        on left: 50
        on right: 51
    branch_statement (61)
        on left: 54
        on right: 25
    $@8 (62)
        on left: 52
        on right: 54
    $@9 (63)
        on left: 53
        on right: 54
    if_statement (64)
        on left: 55 56
        on right: 23
    if_part <i> (65)
        on left: 59
        on right: 55 56
    @10 (66)
        on left: 57
        on right: 59
    $@11 (67)
        on left: 58
        on right: 59
    rel_exp <i> (68)
        on left: 60
        on right: 59
    return_statement (69)
        on left: 61 62
        on right: 27


State 0

    0 $accept: . program $end

    _TYPE  shift, and go to state 1

    program        go to state 2
    function_list  go to state 3
    function       go to state 4


State 1

    5 function: _TYPE . _ID $@1 _LPAREN parameters _RPAREN body

    _ID  shift, and go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    1 program: function_list .
    3 function_list: function_list . function

    _TYPE  shift, and go to state 1

    $default  reduce using rule 1 (program)

    function  go to state 7


State 4

    2 function_list: function .

    $default  reduce using rule 2 (function_list)


State 5

    5 function: _TYPE _ID . $@1 _LPAREN parameters _RPAREN body

    $default  reduce using rule 4 ($@1)

    $@1  go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    3 function_list: function_list function .

    $default  reduce using rule 3 (function_list)


State 8

    5 function: _TYPE _ID $@1 . _LPAREN parameters _RPAREN body

    _LPAREN  shift, and go to state 9


State 9

    5 function: _TYPE _ID $@1 _LPAREN . parameters _RPAREN body

    _TYPE  shift, and go to state 10

    $default  reduce using rule 6 (parameters)

    parameters  go to state 11
    pars        go to state 12


State 10

    8 pars: _TYPE . _ID

    _ID  shift, and go to state 13


State 11

    5 function: _TYPE _ID $@1 _LPAREN parameters . _RPAREN body

    _RPAREN  shift, and go to state 14


State 12

    7 parameters: pars .
    9 pars: pars . _COMMA _TYPE _ID

    _COMMA  shift, and go to state 15

    $default  reduce using rule 7 (parameters)


State 13

    8 pars: _TYPE _ID .

    $default  reduce using rule 8 (pars)


State 14

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN . body

    _LBRACKET  shift, and go to state 16

    body  go to state 17


State 15

    9 pars: pars _COMMA . _TYPE _ID

    _TYPE  shift, and go to state 18


State 16

   11 body: _LBRACKET . variable_list $@2 statement_list _RBRACKET

    $default  reduce using rule 12 (variable_list)

    variable_list  go to state 19


State 17

    5 function: _TYPE _ID $@1 _LPAREN parameters _RPAREN body .

    $default  reduce using rule 5 (function)


State 18

    9 pars: pars _COMMA _TYPE . _ID

    _ID  shift, and go to state 20


State 19

   11 body: _LBRACKET variable_list . $@2 statement_list _RBRACKET
   13 variable_list: variable_list . variable

    _TYPE  shift, and go to state 21

    $default  reduce using rule 10 ($@2)

    $@2       go to state 22
    variable  go to state 23


State 20

    9 pars: pars _COMMA _TYPE _ID .

    $default  reduce using rule 9 (pars)


State 21

   15 variable: _TYPE . $@3 vars _SEMICOLON

    $default  reduce using rule 14 ($@3)

    $@3  go to state 24


State 22

   11 body: _LBRACKET variable_list $@2 . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 25


State 23

   13 variable_list: variable_list variable .

    $default  reduce using rule 13 (variable_list)


State 24

   15 variable: _TYPE $@3 . vars _SEMICOLON

    _ID  shift, and go to state 26

    vars  go to state 27


State 25

   11 body: _LBRACKET variable_list $@2 statement_list . _RBRACKET
   19 statement_list: statement_list . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 32
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 35
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 26

   16 vars: _ID .

    $default  reduce using rule 16 (vars)


State 27

   15 variable: _TYPE $@3 vars . _SEMICOLON
   17 vars: vars . _COMMA _ID

    _SEMICOLON  shift, and go to state 47
    _COMMA      shift, and go to state 48


State 28

   59 if_part: _IF . _LPAREN @10 rel_exp $@11 _RPAREN statement

    _LPAREN  shift, and go to state 49


State 29

   61 return_statement: _RETURN . num_exp _SEMICOLON
   62                 | _RETURN . _SEMICOLON

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53
    _SEMICOLON    shift, and go to state 54

    num_exp        go to state 55
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 30

   31 assignment_statement: _ID . _ASSIGN num_exp _SEMICOLON
   39 var_inc: _ID . _INC
   43 function_call: _ID . $@4 _LPAREN arguments _RPAREN

    _ASSIGN  shift, and go to state 60
    _INC     shift, and go to state 61

    $default  reduce using rule 42 ($@4)

    $@4  go to state 62


State 31

   28 compound_statement: _LBRACKET . statement_list _RBRACKET

    $default  reduce using rule 18 (statement_list)

    statement_list  go to state 63


State 32

   11 body: _LBRACKET variable_list $@2 statement_list _RBRACKET .

    $default  reduce using rule 11 (body)


State 33

   51 iterate_statement: _ITERATE . _ID $@5 literal _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON

    _ID  shift, and go to state 64


State 34

   54 branch_statement: _BRANCH . _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _LPAREN  shift, and go to state 65


State 35

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


State 36

   20 statement: compound_statement .

    $default  reduce using rule 20 (statement)


State 37

   26 statement: function_statement .

    $default  reduce using rule 26 (statement)


State 38

   21 statement: inc_statement .

    $default  reduce using rule 21 (statement)


State 39

   22 statement: assignment_statement .

    $default  reduce using rule 22 (statement)


State 40

   30 inc_statement: var_inc . _SEMICOLON

    _SEMICOLON  shift, and go to state 66


State 41

   29 function_statement: function_call . _SEMICOLON

    _SEMICOLON  shift, and go to state 67


State 42

   24 statement: iterate_statement .

    $default  reduce using rule 24 (statement)


State 43

   25 statement: branch_statement .

    $default  reduce using rule 25 (statement)


State 44

   23 statement: if_statement .

    $default  reduce using rule 23 (statement)


State 45

   55 if_statement: if_part .
   56             | if_part . _ELSE statement

    _ELSE  shift, and go to state 68

    $default  reduce using rule 55 (if_statement)


State 46

   27 statement: return_statement .

    $default  reduce using rule 27 (statement)


State 47

   15 variable: _TYPE $@3 vars _SEMICOLON .

    $default  reduce using rule 15 (variable)


State 48

   17 vars: vars _COMMA . _ID

    _ID  shift, and go to state 69


State 49

   59 if_part: _IF _LPAREN . @10 rel_exp $@11 _RPAREN statement

    $default  reduce using rule 57 (@10)

    @10  go to state 70


State 50

   35 exp: _ID .
   39 var_inc: _ID . _INC
   43 function_call: _ID . $@4 _LPAREN arguments _RPAREN

    _INC  shift, and go to state 61

    _LPAREN   reduce using rule 42 ($@4)
    $default  reduce using rule 35 (exp)

    $@4  go to state 62


State 51

   40 literal: _INT_NUMBER .

    $default  reduce using rule 40 (literal)


State 52

   41 literal: _UINT_NUMBER .

    $default  reduce using rule 41 (literal)


State 53

   38 exp: _LPAREN . num_exp _RPAREN

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 71
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 54

   62 return_statement: _RETURN _SEMICOLON .

    $default  reduce using rule 62 (return_statement)


State 55

   33 num_exp: num_exp . _AROP exp
   61 return_statement: _RETURN num_exp . _SEMICOLON

    _SEMICOLON  shift, and go to state 72
    _AROP       shift, and go to state 73


State 56

   32 num_exp: exp .

    $default  reduce using rule 32 (num_exp)


State 57

   36 exp: var_inc .

    $default  reduce using rule 36 (exp)


State 58

   34 exp: literal .

    $default  reduce using rule 34 (exp)


State 59

   37 exp: function_call .

    $default  reduce using rule 37 (exp)


State 60

   31 assignment_statement: _ID _ASSIGN . num_exp _SEMICOLON

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 74
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 61

   39 var_inc: _ID _INC .

    $default  reduce using rule 39 (var_inc)


State 62

   43 function_call: _ID $@4 . _LPAREN arguments _RPAREN

    _LPAREN  shift, and go to state 75


State 63

   19 statement_list: statement_list . statement
   28 compound_statement: _LBRACKET statement_list . _RBRACKET

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _RBRACKET  shift, and go to state 76
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 35
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 64

   51 iterate_statement: _ITERATE _ID . $@5 literal _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON

    $default  reduce using rule 48 ($@5)

    $@5  go to state 77


State 65

   54 branch_statement: _BRANCH _LPAREN . _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _ID  shift, and go to state 78


State 66

   30 inc_statement: var_inc _SEMICOLON .

    $default  reduce using rule 30 (inc_statement)


State 67

   29 function_statement: function_call _SEMICOLON .

    $default  reduce using rule 29 (function_statement)


State 68

   56 if_statement: if_part _ELSE . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 79
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 69

   17 vars: vars _COMMA _ID .

    $default  reduce using rule 17 (vars)


State 70

   59 if_part: _IF _LPAREN @10 . rel_exp $@11 _RPAREN statement

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 80
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59
    rel_exp        go to state 81


State 71

   33 num_exp: num_exp . _AROP exp
   38 exp: _LPAREN num_exp . _RPAREN

    _RPAREN  shift, and go to state 82
    _AROP    shift, and go to state 73


State 72

   61 return_statement: _RETURN num_exp _SEMICOLON .

    $default  reduce using rule 61 (return_statement)


State 73

   33 num_exp: num_exp _AROP . exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    exp            go to state 83
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 74

   31 assignment_statement: _ID _ASSIGN num_exp . _SEMICOLON
   33 num_exp: num_exp . _AROP exp

    _SEMICOLON  shift, and go to state 84
    _AROP       shift, and go to state 73


State 75

   43 function_call: _ID $@4 _LPAREN . arguments _RPAREN

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    $default  reduce using rule 44 (arguments)

    num_exp        go to state 85
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59
    arguments      go to state 86
    args           go to state 87


State 76

   28 compound_statement: _LBRACKET statement_list _RBRACKET .

    $default  reduce using rule 28 (compound_statement)


State 77

   51 iterate_statement: _ITERATE _ID $@5 . literal _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 88


State 78

   54 branch_statement: _BRANCH _LPAREN _ID . $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    $default  reduce using rule 52 ($@8)

    $@8  go to state 89


State 79

   56 if_statement: if_part _ELSE statement .

    $default  reduce using rule 56 (if_statement)


State 80

   33 num_exp: num_exp . _AROP exp
   60 rel_exp: num_exp . _RELOP num_exp

    _AROP   shift, and go to state 73
    _RELOP  shift, and go to state 90


State 81

   59 if_part: _IF _LPAREN @10 rel_exp . $@11 _RPAREN statement

    $default  reduce using rule 58 ($@11)

    $@11  go to state 91


State 82

   38 exp: _LPAREN num_exp _RPAREN .

    $default  reduce using rule 38 (exp)


State 83

   33 num_exp: num_exp _AROP exp .

    $default  reduce using rule 33 (num_exp)


State 84

   31 assignment_statement: _ID _ASSIGN num_exp _SEMICOLON .

    $default  reduce using rule 31 (assignment_statement)


State 85

   33 num_exp: num_exp . _AROP exp
   46 args: num_exp .

    _AROP  shift, and go to state 73

    $default  reduce using rule 46 (args)


State 86

   43 function_call: _ID $@4 _LPAREN arguments . _RPAREN

    _RPAREN  shift, and go to state 92


State 87

   45 arguments: args .
   47 args: args . _COMMA num_exp

    _COMMA  shift, and go to state 93

    $default  reduce using rule 45 (arguments)


State 88

   51 iterate_statement: _ITERATE _ID $@5 literal . _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON

    _COLON  shift, and go to state 94


State 89

   54 branch_statement: _BRANCH _LPAREN _ID $@8 . _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _SEMICOLON  shift, and go to state 95


State 90

   60 rel_exp: num_exp _RELOP . num_exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 96
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 91

   59 if_part: _IF _LPAREN @10 rel_exp $@11 . _RPAREN statement

    _RPAREN  shift, and go to state 97


State 92

   43 function_call: _ID $@4 _LPAREN arguments _RPAREN .

    $default  reduce using rule 43 (function_call)


State 93

   47 args: args _COMMA . num_exp

    _ID           shift, and go to state 50
    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52
    _LPAREN       shift, and go to state 53

    num_exp        go to state 98
    exp            go to state 56
    var_inc        go to state 57
    literal        go to state 58
    function_call  go to state 59


State 94

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON . literal $@6 statement _STEP literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 99


State 95

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON . literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 100


State 96

   33 num_exp: num_exp . _AROP exp
   60 rel_exp: num_exp _RELOP num_exp .

    _AROP  shift, and go to state 73

    $default  reduce using rule 60 (rel_exp)


State 97

   59 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN . statement

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 101
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 98

   33 num_exp: num_exp . _AROP exp
   47 args: args _COMMA num_exp .

    _AROP  shift, and go to state 73

    $default  reduce using rule 47 (args)


State 99

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal . $@6 statement _STEP literal $@7 _SEMICOLON

    $default  reduce using rule 49 ($@6)

    $@6  go to state 102


State 100

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal . _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _COMMA  shift, and go to state 103


State 101

   59 if_part: _IF _LPAREN @10 rel_exp $@11 _RPAREN statement .

    $default  reduce using rule 59 (if_part)


State 102

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 . statement _STEP literal $@7 _SEMICOLON

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 104
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 103

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA . literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 105


State 104

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement . _STEP literal $@7 _SEMICOLON

    _STEP  shift, and go to state 106


State 105

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal . _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _COMMA  shift, and go to state 107


State 106

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement _STEP . literal $@7 _SEMICOLON

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 108


State 107

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA . literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _INT_NUMBER   shift, and go to state 51
    _UINT_NUMBER  shift, and go to state 52

    literal  go to state 109


State 108

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement _STEP literal . $@7 _SEMICOLON

    $default  reduce using rule 50 ($@7)

    $@7  go to state 110


State 109

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal . _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _RPAREN  shift, and go to state 111


State 110

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement _STEP literal $@7 . _SEMICOLON

    _SEMICOLON  shift, and go to state 112


State 111

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN . $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    $default  reduce using rule 53 ($@9)

    $@9  go to state 113


State 112

   51 iterate_statement: _ITERATE _ID $@5 literal _COLON literal $@6 statement _STEP literal $@7 _SEMICOLON .

    $default  reduce using rule 51 (iterate_statement)


State 113

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 . _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _FIRST  shift, and go to state 114


State 114

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST . statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 115
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 115

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement . _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _SECOND  shift, and go to state 116


State 116

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND . statement _THIRD statement _OTHERWISE statement _END_BRANCH

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 117
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 117

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement . _THIRD statement _OTHERWISE statement _END_BRANCH

    _THIRD  shift, and go to state 118


State 118

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD . statement _OTHERWISE statement _END_BRANCH

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 119
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 119

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement . _OTHERWISE statement _END_BRANCH

    _OTHERWISE  shift, and go to state 120


State 120

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE . statement _END_BRANCH

    _IF        shift, and go to state 28
    _RETURN    shift, and go to state 29
    _ID        shift, and go to state 30
    _LBRACKET  shift, and go to state 31
    _ITERATE   shift, and go to state 33
    _BRANCH    shift, and go to state 34

    statement             go to state 121
    compound_statement    go to state 36
    function_statement    go to state 37
    inc_statement         go to state 38
    assignment_statement  go to state 39
    var_inc               go to state 40
    function_call         go to state 41
    iterate_statement     go to state 42
    branch_statement      go to state 43
    if_statement          go to state 44
    if_part               go to state 45
    return_statement      go to state 46


State 121

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement . _END_BRANCH

    _END_BRANCH  shift, and go to state 122


State 122

   54 branch_statement: _BRANCH _LPAREN _ID $@8 _SEMICOLON literal _COMMA literal _COMMA literal _RPAREN $@9 _FIRST statement _SECOND statement _THIRD statement _OTHERWISE statement _END_BRANCH .

    $default  reduce using rule 54 (branch_statement)
